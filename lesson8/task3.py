# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.Примечание: длина списка не фиксирована.
# Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
# очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.


class MyException(Exception):
    def __str__(self):
        return f'Значение не число'


only_numbers_list = []

while True:
    el = input('Введите элемент списка, если хотите закончить введите стоп: ')

    if el == 'стоп':
        print(f'Вы сформировали список: {only_numbers_list}')
        break

    try:
        if not el.isnumeric():
            raise MyException
        only_numbers_list.append(int(el))
    except MyException as e:
        print(e)

